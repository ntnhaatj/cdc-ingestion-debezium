version: '3.0'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    env_file:
      - env/zookeeper.env
    restart: always

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - 9092:9092
      - 29092:29092
    depends_on:
      - zookeeper
    env_file:
      - env/kafka.env
    restart: always

  mysql:
    image: debezium/example-mysql:1.0
    container_name: mysql
    ports:
      - 3306:3306
    env_file:
      - env/mysql.env
    restart: always

  connect:
    image: debezium/connect:1.9
    container_name: connect
    ports:
      - 8083:8083
    depends_on:
      - kafka
      - schema-registry
      - mysql
    env_file:
      - env/connectors.env
    restart: always

  schema-registry:
    image: confluentinc/cp-schema-registry
    container_name: schema-registry
    ports:
      - 8081:8081
    depends_on:
      - kafka
      - zookeeper
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=kafka:9092
    restart: always

  streamsvc:
    image: cdc-ingestion
    container_name: streamsvc
    build:
      context: .
      dockerfile: pyspark.Dockerfile
    volumes:
      - ./:/app
    command: ["main.py",
              "--cls", "svc.streams.CDCMySQLTable",
              "--opts", "{\"app_name\": \"test\", \"table_name\": \"customers\"}"]
    depends_on:
      - kafka
      - mysql
      - connect
      - schema-registry
    env_file:
      - env/kafka.env
      - env/mysql.env
      - env/connectors.env
      - env/streamsvc.env
    restart: on-failure

  watcher:
    image: quay.io/debezium/kafka:1.9
    container_name: watcher
    depends_on:
      - kafka
      - mysql
      - connect
      - streamsvc
    command: ["watch-topic", "-a", "-k", "dbserver1.inventory.customers"]
    env_file:
      - env/kafka.env
